@page "/"
@using personal_blog.core.DTOs
@using personal_blog.core.Handlers
@using personal_blog.core.Handlers.FrontEndHandlers
@using personal_blog.core.Requests.Posts
@using personal_blog.front.Components.Cards
@inject IFrontPostHandler Handler

<MudContainer Class="my-10 d-flex align-center justify-center" Style="min-height: 78vh;">
    <MudPaper Class="pa-10 align-items-center" Style="background-color: #EBE9E1">
        <MudText Typo="Typo.h1" Color="Color.Primary" Align="Align.Center">
            Welcome to the Trash Tech Blog!
        </MudText>
        <MudText Typo="Typo.h5" Class="pa-1 ma-2" Color="Color.Primary" Align="Align.Center">
            Either you are a wanderer
            that wants to read tech content, or a recruiter that
            is interested in hiring. None of the less, here are some
            featured posts for you.
        </MudText>
        @if (_isLoading)
        {
            <MudElement Class="d-flex align-center justify-center">
                <MudProgressCircular Indeterminate="true"
                                     Color="Color.Primary"
                                     Class="my-8"/>
            </MudElement>
        } 
        else if (_errorMessage != null)
        {
            <MudAlert Severity="Severity.Error" Class="mb-5">@_errorMessage</MudAlert>
        }
        
        <PostCard Posts="_featuredPosts"/>
        
    </MudPaper>
</MudContainer>

@code {
    private List<PostDTO>? _featuredPosts = [];
    private string? _errorMessage;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var request = new GetFeaturedPostsRequest();
            var result = await Handler.GetFeaturedAsync(request);

            if (result.IsSuccess)
            {
                _featuredPosts = result.Data;
                _errorMessage = null;
            }
            else
            {
                _errorMessage = result.Message ?? "Failed to load featured posts with an unknown error.";
                _featuredPosts = new List<PostDTO>();
            }
        }
        catch (HttpRequestException ex)
        {
            _errorMessage = $"An error occurred while fetching posts: {ex.Message}";
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

}