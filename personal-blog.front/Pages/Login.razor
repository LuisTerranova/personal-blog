@page "/login"
@using Microsoft.AspNetCore.Authorization
@using personal_blog.core.Requests
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject NavigationManager Nav
@attribute [AllowAnonymous]

<div style="min-height: 93vh;" class="d-flex justify-center align-center">
    <MudContainer MaxWidth="MaxWidth.Small">
        <MudGrid>
            <MudItem xs="12" Class="align-items-center">
                <EditForm  FormName="Login" Model="_loginRequest" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator/>
                    <MudCard Class="pa-10 ma-3 mud-theme-primary">
                        <MudText Typo="Typo.h4" Class="d-flex justify-center align-center">Admin log-in</MudText>
                        <MudCardContent>
                            <MudTextField Label="Username" @bind-Value="_loginRequest.Email" Variant="Variant.Outlined"/>
                            <MudTextField Label="Password" InputType="InputType.Password" @bind-Value="_loginRequest.Password" Variant="Variant.Outlined"/>
                        </MudCardContent>
                        <MudButton Color="Color.Secondary" Variant="Variant.Filled" ButtonType="ButtonType.Submit">Login</MudButton>
                    </MudCard>
                </EditForm>
            </MudItem>
        </MudGrid>
    </MudContainer>    
</div>

@code {
    private LoginRequest _loginRequest = new();

    public record JwtToken
    {
        public string accessToken;
    }
    
    private async Task HandleLogin(EditContext context)
    {
        var user = _loginRequest;
        var response = await Http.PostAsJsonAsync("v1/identity/login", user);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadFromJsonAsync<JwtToken>();
            await LocalStorage.SetItemAsync("authToken", token.accessToken);
            Nav.NavigateTo("/dashboard");
        }
    }
}